import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
import matplotlib.pyplot as plt

# 1. –ú–∞–∞–ª—ã–º–∞—Ç—Ç—ã –∂“Ø–∫—Ç”©”©
df = pd.read_csv("data.csv")

# 2. TF-IDF –º–µ–Ω–µ–Ω —Ç–µ–∫—Å—Ç—Ç–∏ —Å–∞–Ω–≥–∞ –∞–π–ª–∞–Ω—Ç—É—É
vectorizer = TfidfVectorizer(stop_words='english')
X = vectorizer.fit_transform(df['Interest'])

# 3. –ö–ª–∞—Å—Ç–µ—Ä–ª”©”© (–º–∏—Å–∞–ª—ã, 3 –∫–ª–∞—Å—Ç–µ—Ä)
kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(X)

# 4. PCA –∞—Ä–∫—ã–ª—É—É 2D –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—Ç–∞—Ä–≥–∞ –∫—ã—Å–∫–∞—Ä—Ç—É—É
pca = PCA(n_components=2)
reduced_data = pca.fit_transform(X.toarray())

# 5. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
plt.figure(figsize=(10, 6))
colors = ['red', 'green', 'blue']
for i in range(3):
    points = reduced_data[df['Cluster'] == i]
    plt.scatter(points[:, 0], points[:, 1], c=colors[i], label=f'Cluster {i}')

plt.title('üß† TF-IDF –ö–ª–∞—Å—Ç–µ—Ä–ª”©”© –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è—Å—ã')
plt.xlabel('PCA 1')
plt.ylabel('PCA 2')
plt.legend()
plt.grid(True)
plt.show()

# 6. –¢–µ—Ä–º–∏–Ω–∞–ª–¥–∞ –∫–ª–∞—Å—Ç–µ—Ä –∂—ã–π—ã–Ω—Ç—ã–≥—ã–Ω –∫”©—Ä—Å”©—Ç“Ø“Ø
print("\nüîç –ñ–∞–ª–ø—ã –ö–ª–∞—Å—Ç–µ—Ä–ª”©”© –ñ—ã–π—ã–Ω—Ç—ã–≥—ã:")
print(df[['Name', 'Interest', 'Cluster']].to_string(index=False))

# 7. –ê—Ä –±–∏—Ä –∫–ª–∞—Å—Ç–µ—Ä –±–æ—é–Ω—á–∞ —Ç–æ–ø—Ç–æ—Ä–¥—É ”©–∑“Ø–Ω—á”© —á—ã–≥–∞—Ä—É—É
print("\nüìä –ö–ª–∞—Å—Ç–µ—Ä–ª–µ—Ä –±–æ—é–Ω—á–∞ –±”©–ª“Ø–Ω–≥”©–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä:")

for i in range(3):
    print(f"\nüîπ Cluster {i}:")
    cluster_df = df[df['Cluster'] == i]
    for _, row in cluster_df.iterrows():
        print(f"üë§ {row['Name']} ‚Äî {row['Interest']}")

